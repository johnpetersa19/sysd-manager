#!/usr/bin/env python3

from pprint import pprint
import pathlib
import csv
import subprocess
import tomllib
import os
import re
import glob
import git
import argparse

from build_aux.build_common import *


G_RPM_VERSION = None
G_SRPM_PATH = None
G_MOCK_SRPM_ROOT = None
G_MOCK_RPM_ROOT = None
SPEC_FILE_PATH = None
G_LOCAL_RPM_DIR = "tmp"
G_SOURCES_DIR = f"{G_LOCAL_RPM_DIR}/SOURCES"
G_SPECS_DIR = f"{G_LOCAL_RPM_DIR}/SPECS"
COPR_REPO = "sysd-manager"

APP_ID = "io.github.plrigaux.sysd-manager"
MANIFEST = f"{APP_ID}.yaml"

parser = argparse.ArgumentParser(description="Copr RPM builder",
                                 formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument("action", choices=[
                    "clean", "build", "run", "lint"], help="action to perform")


args = parser.parse_args()


def main():

    match args.action:
        case "build":
            build()
        case "clean":
            clean()
        case "run":
            run()
        case "lint":
            lint()


def clean():
    list_dir = ["builddir", ".flatpak-builder"]

    for dir in list_dir:
        print(f"{color.BOLD}Deleting{color.END} {dir}")
        subprocess.run(["rm", "-fr", dir])


def build():
    subprocess.run(["flatpak-builder",
                    "--force-clean",
                    "--user",
                    "--install-deps-from=flathub",
                    "--repo=repo",
                    "--install",
                    "builddir",
                    MANIFEST])


def run():
    print("Try to run the Flatpack")
    # subprocess.run(["flatpak", "run", "io.github.plrigaux.sysd-manager"])
    subprocess.run(["flatpak", "run", APP_ID])


def lint():
    print(f"{color.BOLD}{color.CYAN}Lint manifest{color.END}")
    subprocess.run(["flatpak", "run", "--command=flatpak-builder-lint",
                    "org.flatpak.Builder", "manifest", MANIFEST])

    print(f"{color.BOLD}{color.CYAN}Lint repo{color.END}")
    subprocess.run(["flatpak","run", "--command=flatpak-builder-lint", "org.flatpak.Builder", "repo", "repo"])


main()
